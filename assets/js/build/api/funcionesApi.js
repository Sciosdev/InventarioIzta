export const basePath=window.APP_BASE_PATH??"";export function resolveUrl(t){if(t instanceof URL)return t;if("string"==typeof t){if(/^https?:\/\//i.test(t))return new URL(t);const o=t.startsWith("/")?`${basePath}${t}`:`${basePath}/${t}`;return new URL(o,window.location.origin)}throw new TypeError("La URL proporcionada no es vÃ¡lida.")}export async function getApi(t){try{const o=await fetch(resolveUrl(t));return await o.json()}catch(t){console.log(t)}}export async function getApiFiltros(t,o){const n=new URL(`${basePath}/api/index.php/${t}`,window.location.origin),e=new URLSearchParams;Object.keys(o).forEach((t=>{e.append(t,o[t])})),n.search=e.toString();return await getApi(n)}export async function postApi(t,o){try{const n=await fetch(resolveUrl(t),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});return await n.json()}catch(t){console.log(t)}}export async function deleteApi(t,o){try{const n=await fetch(resolveUrl(t),{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});return await n.json()}catch(t){console.log(t)}}export async function putApi(t,o){try{const n=await fetch(resolveUrl(t),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});return await n.json()}catch(t){console.log(t)}}